"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const ethers_provider_bundle_1 = require("@flashbots/ethers-provider-bundle");
const ethers_1 = require("ethers");

let tx = "0xf9040b8085031d6595ed8302a21b944fd0e4818cb850a722bcaa448e06907e05a80c7380b903a49303038d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000003000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000132eeb05d5cb6829bd34f552cde0b6b708ef50140000000000000000000000006d7b6dad6abed1dfa5eba37a6667ba9dcfd490770000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000132eeb05d5cb6829bd34f552cde0b6b708ef50140000000000000000000000000000000000000000000000000187afca767ca0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a4022c0d9f00000000000000000000000000000000000000000000001747bd806e9e8cdc6f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000006d7b6dad6abed1dfa5eba37a6667ba9dcfd49077000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a4022c0d9f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001909cd674dfc4a00000000000000000000000004fd0e4818cb850a722bcaa448e06907e05a80c73000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000025a0d22c43cd148b1b53cbb9b15631332bd6a0e540103e8be1a7bf970ea9dc733a56a06d8a8558c9592bba828c47873ed30b5251d2adb5b725866cdcf78e1cc15f07df";
let targetBlockNumber = 15767000;

// let tx = "0xf9040b8085031d6595ed8302a21b944fd0e4818cb850a722bcaa448e06907e05a80c7380b903a49303038d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000003000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000132eeb05d5cb6829bd34f552cde0b6b708ef50140000000000000000000000006d7b6dad6abed1dfa5eba37a6667ba9dcfd490770000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000132eeb05d5cb6829bd34f552cde0b6b708ef50140000000000000000000000000000000000000000000000000187afca767ca0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a4022c0d9f00000000000000000000000000000000000000000000001747bd806e9e8cdc6f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000006d7b6dad6abed1dfa5eba37a6667ba9dcfd49077000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a4022c0d9f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001909cd674dfc4a00000000000000000000000004fd0e4818cb850a722bcaa448e06907e05a80c73000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000025a0d22c43cd148b1b53cbb9b15631332bd6a0e540103e8be1a7bf970ea9dc733a56a06d8a8558c9592bba828c47873ed30b5251d2adb5b725866cdcf78e1cc15f07df"
// let tx = "0xac75c867a58b1ef38f7a3ecebd6113c345c45c10690fca7f15407a56828704e7";

function main() {
    return __awaiter(this, void 0, void 0, function* () {
        //const signedTransactions = await flashbotsProvider.signBundle(transactionBundle)
        const provider = new ethers_1.providers.JsonRpcProvider({ url: "https://mainnet.infura.io/v3/b21211a97c6e49cb92a084c041f30468" }, 1);
        const authSigner = ethers_1.Wallet.createRandom();
        const flashbotsProvider = yield ethers_provider_bundle_1.FlashbotsBundleProvider.create(provider, // a normal ethers.js provider, to perform gas estimiations and nonce lookups
        authSigner // ethers.js signer wallet, only for signing request payloads, not transactions
        );

        console.log("////////////////////////////////////////////////////////");
        console.log("/------------------SIMULATION RESULTS------------------/");
        console.log("////////////////////////////////////////////////////////");
        const simulation = JSON.stringify(yield flashbotsProvider.simulate([tx], targetBlockNumber, targetBlockNumber + 1), null, 2);
        console.log(simulation);
        console.log("////////////////////////////////////////////////////////");
        console.log("/---------------------BUNDLE STATS---------------------/");
        console.log("////////////////////////////////////////////////////////");
        //console.log(await flashbotsProvider.getBundleStats(JSON.parse(simulation).bundleHash, targetBlockNumber))
        console.log("////////////////////////////////////////////////////////");
        console.log("/------------------CONFLICTING BUNDLE------------------/");
        console.log("////////////////////////////////////////////////////////");
        const conflict = yield flashbotsProvider.getConflictingBundle([tx], targetBlockNumber);
        console.log(conflict);
        console.log('\n Stringify \n');
        console.log(JSON.stringify(conflict, null, 2));

        //console.log(yield flashbotsProvider.getConflictingBundle([tx], 
        // 15767000, // blockNumber
        //15767817));
    });
}
main();
