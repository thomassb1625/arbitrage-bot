version: '3'
services:

  #Certbot
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - certbot-webroot:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email contact@xyznode.space --agree-tos --no-eff-email --keep-until-expiring -d xyznode.space -d www.xyznode.space

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certbot-webroot:/var/www/html:ro
      - ./nginx-conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-conf/proxy.conf:/etc/nginx/includes/proxy.conf:ro
        #- ./nginx-conf/ca.crt:/etc/nginx/ca.crt:ro
      - ./webapp/build/:/app/:ro
      - certbot-etc:/etc/letsencrypt:ro
      - certbot-var:/var/lib/letsencrypt:ro
      - ./dhparam/dhparam-4096.pem:/etc/letsencrypt/dhparam.pem:ro
    networks:
      - api-network


  ### BACKEND SERVICES BELOW
  backend:
    container_name: backend
    build:
      context: ./apiserver
    expose:
      - "9090"
    env_file: ./apiserver/.env
    networks:
      - api-network
      - backend-network

   #MySQL Service
  database:
    image: mysql
    container_name: database
    restart: unless-stopped
    expose:
        - "3306"
    environment:
      MYSQL_DATABASE: [DATABASE_NAME]
      MYSQL_USER:     [USERNAME]
      MYSQL_PASSWORD: [PASSWORD]
      MYSQL_ROOT_PASSWORD: [ROOT_PASSWORD]
      SERVICE_NAME: mysql
    networks:
      - backend-network
    volumes:
      - mysql-data:/var/lib/mysql

  ### HARDHAT FORK to simualte tx
  anvil:
    #build:
      #context: ./anvil
    image: ghcr.io/foundry-rs/foundry:latest
    container_name: anvil
    command:
      - anvil --fork-url=http://mainnet:8111 --host=0.0.0.0 --port=8999
    depends_on:
      - erigon-mainnet
    networks:
      - backend-network

  ### GOERLI
  erigon-goerli:
    image: jmjac/erigon:v2.30.0
    container_name: goerli
    ports:
      - "127.0.0.1:8221:8221"
    expose:
      - "8221"
      - "32222"
      - "7552"
    volumes:
      - /mnt/md0/data/goerli:/eth/datadir
      - /home/node/goerli-jwtsecret:/eth/jwtsecret
    command:
      - --chain=goerli
      - --datadir=/eth/datadir
      - --authrpc.jwtsecret=/eth/jwtsecret/jwt.hex
      - --authrpc.port=7552
      - --authrpc.addr=0.0.0.0
      - --authrpc.vhosts=*
      - --port=32222
      - --http.addr=0.0.0.0
      - --http.port=8221
      - --torrent.port=42062
      - --rpc.gascap=50000000000
      - --http.api=eth,erigon,web3,net,txpool,trace,debug
      - --http.vhosts=*
      - --torrent.conns.perfile=5
      - --maxpeers=30
      - --ws
      - --externalcl
    networks:
      - backend-network
  prysm-goerli:
    image: gcr.io/prysmaticlabs/prysm/beacon-chain:stable
    container_name: prysm-goerli
    expose:
      - "8080"
      - "3500"
        #ports:
        #- "13002:13002"
        #- "12002:12002"
    command:
      - --execution-endpoint=http://goerli:7552
      - --accept-terms-of-use
      - --prater
      - --datadir=/data
      - --jwt-secret=/eth/jwtsecret/jwt.hex
      - --genesis-state=/genesis/genesis.ssz
      - --suggested-fee-recipient=0xe24705D568e4A7A2517c3486C37a374B9679Ab46
      - --rpc-host=0.0.0.0
      - --grpc-gateway-host=0.0.0.0
      - --grpc-gateway-port=3500
      - --p2p-tcp-port=13002
      - --p2p-udp-port=12002
      - --p2p-host-dns=xyznode.space
      - --monitoring-host=0.0.0.0
    networks:
      - backend-network
    volumes:
      - /mnt/md0/data/prysm-goerli/data:/data
      - /mnt/md0/data/prysm-goerli/genesis:/genesis
      - /home/node/goerli-jwtsecret:/eth/jwtsecret
    depends_on:
      - erigon-goerli

  ### ETH
  erigon-mainnet:
    image: jmjac/erigon:v2.30.0
    container_name: mainnet
    ports:
      - "127.0.0.1:8111:8111"
    expose:
      - "8111"
      - "31111"
      - "7551"
    volumes:
      - /home/node/mainnet:/eth/datadir
      - /home/node/mainnet-jwtsecret:/eth/jwtsecret
    command:
      - --datadir=/eth/datadir
      - --authrpc.jwtsecret=/eth/jwtsecret/jwt.hex
      - --port=31111
      - --torrent.port=8112
      - --http.addr=0.0.0.0
      - --http.port=8111
      - --authrpc.addr=0.0.0.0
      - --authrpc.vhosts=*
      - --authrpc.port=7551
      - --rpc.gascap=50000000000
      - --http.api=eth,erigon,web3,net,txpool,trace,debug
      - --http.vhosts=*
      - --torrent.conns.perfile=5
      - --externalcl
      - --ws
      - --maxpeers=30
    networks:
      - backend-network
  prysm-mainnet:
    image: gcr.io/prysmaticlabs/prysm/beacon-chain:stable
    container_name: prysm-mainnet
    expose:
      - "3500"
      - "8080"
        #ports:
        #- "13001:13001"
        #- "12001:12001"
    command:
      - --execution-endpoint=http://mainnet:7551
      - --accept-terms-of-use
      - --datadir=/data
      - --jwt-secret=/eth/jwtsecret/jwt.hex
      - --suggested-fee-recipient=0xe24705D568e4A7A2517c3486C37a374B9679Ab46
      - --rpc-host=0.0.0.0
      - --p2p-tcp-port=13001
      - --p2p-udp-port=12001
      - --p2p-host-dns=xyznode.space
      - --grpc-gateway-host=0.0.0.0
      - --grpc-gateway-port=3500
      - --monitoring-host=0.0.0.0
    networks:
      - backend-network
    volumes:
      - /mnt/md0/data/prysm-mainnet/data:/data
      - /home/node/mainnet-jwtsecret:/eth/jwtsecret
    depends_on:
      - erigon-mainnet

  ### BSC
  erigon-bsc:
    #build:
    #  context: ./erigon
    image: jmjac/erigon:v2.30.0
    container_name: bsc
      #    ports:
      #  - "33333:33333"
    expose:
      - "8441"
      - "34444"
    volumes:
      - /mnt/md0/data/bsc_snapshot:/eth/datadir
    command:
      - --chain=bsc
      - --datadir=/eth/datadir
      - --port=34444
      - --prune=hrtc
      - --db.pagesize=16k
      - --http.addr=0.0.0.0
      - --http.port=8441
      - --torrent.port=33333
      - --http.api=eth,erigon,web3,net,txpool,trace
      - --maxpeers=10
      - --torrent.conns.perfile=5
      - --rpc.gascap=50000000000
      - --http.vhosts=*
    networks:
      - backend-network

  ### MOONBEAM
  moonbeam:
    image: purestake/moonbeam:v0.27.2
    container_name: moonbeam
    ports:
      - "127.0.0.1:6541:6541"
    volumes:
      - /mnt/md0/data/moonbeam/data:/data
    command:
      - --base-path=/data
      - --chain=moonbeam
      - --name="tasasdxyzMoonbeam"
      - --execution=wasm
      - --wasm-execution=compiled
      - --state-pruning=archive
      - --trie-cache-size=0
      - --db-cache=16000
      - --rpc-external
      - --rpc-port=6541
      - --rpc-cors=all
    networks:
      - backend-network

volumes:
    mysql-data:
        external: true
        name: mysql-data
    certbot-etc:
        external: true
        name: certbot-etc
    certbot-var:
        external: true
        name: certbot-var
    certbot-webroot:
        external: true
        name: certbot-webroot

#Docker Networks
networks:
  api-network:
    driver: bridge
  backend-network:
    driver: bridge
